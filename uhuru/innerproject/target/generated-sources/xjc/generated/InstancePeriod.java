//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.02.27 at 06:26:30 PM GMT 
//


package generated;

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDateTime;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}DISALL" minOccurs="0"/>
 *         &lt;element ref="{}EXCHIND"/>
 *         &lt;element ref="{}GROSSFEE" minOccurs="0"/>
 *         &lt;element ref="{}LOCSDY"/>
 *         &lt;element ref="{}MODE"/>
 *         &lt;element ref="{}MSTUFEE" minOccurs="0"/>
 *         &lt;element ref="{}NETFEE" minOccurs="0"/>
 *         &lt;element ref="{}NOTACT" minOccurs="0"/>
 *         &lt;element ref="{}PERIODEND"/>
 *         &lt;element ref="{}PERIODSTART"/>
 *         &lt;element ref="{}PRIPROV" minOccurs="0"/>
 *         &lt;element ref="{}SSELIG"/>
 *         &lt;element ref="{}STULOAD"/>
 *         &lt;element ref="{}YEARPRG"/>
 *         &lt;element ref="{}YEARSTU"/>
 *         &lt;element ref="{}QualificationsAwarded" maxOccurs="2" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "disall",
    "exchind",
    "grossfee",
    "locsdy",
    "mode",
    "mstufee",
    "netfee",
    "notact",
    "periodend",
    "periodstart",
    "priprov",
    "sselig",
    "stuload",
    "yearprg",
    "yearstu",
    "qualificationsAwarded"
})
@XmlRootElement(name = "InstancePeriod")
@Entity(name = "InstancePeriod")
@Table(name = "INSTANCEPERIOD")
@Inheritance(strategy = InheritanceType.JOINED)
public class InstancePeriod
    implements Serializable, Equals, HashCode
{

    @XmlElement(name = "DISALL")
    protected DISALLCodeType disall;
    @XmlElement(name = "EXCHIND", required = true)
    protected EXCHINDCodeType exchind;
    @XmlElement(name = "GROSSFEE")
    protected BigInteger grossfee;
    @XmlElement(name = "LOCSDY", required = true)
    protected LOCSDYCodeType locsdy;
    @XmlElement(name = "MODE", required = true)
    protected MODECodeType mode;
    @XmlElement(name = "MSTUFEE")
    protected MSTUFEECodeType mstufee;
    @XmlElement(name = "NETFEE")
    protected BigInteger netfee;
    @XmlElement(name = "NOTACT")
    protected NOTACTCodeType notact;
    @XmlElement(name = "PERIODEND", required = true)
    protected XMLGregorianCalendar periodend;
    @XmlElement(name = "PERIODSTART", required = true)
    protected XMLGregorianCalendar periodstart;
    @XmlElement(name = "PRIPROV")
    protected String priprov;
    @XmlElement(name = "SSELIG", required = true)
    protected SSELIGCodeType sselig;
    @XmlElement(name = "STULOAD", required = true)
    protected BigDecimal stuload;
    @XmlElement(name = "YEARPRG", required = true)
    protected BigInteger yearprg;
    @XmlElement(name = "YEARSTU")
    protected int yearstu;
    @XmlElement(name = "QualificationsAwarded")
    protected List<QualificationsAwarded> qualificationsAwarded;
    @XmlTransient
    protected Long hjid;

    /**
     * Gets the value of the disall property.
     * 
     * @return
     *     possible object is
     *     {@link DISALLCodeType }
     *     
     */
    @ManyToOne(targetEntity = DISALLCodeType.class, cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinColumn(name = "DISALL")
    public DISALLCodeType getDISALL() {
        return disall;
    }

    /**
     * Sets the value of the disall property.
     * 
     * @param value
     *     allowed object is
     *     {@link DISALLCodeType }
     *     
     */
    public void setDISALL(DISALLCodeType value) {
        this.disall = value;
    }

    /**
     * Gets the value of the exchind property.
     * 
     * @return
     *     possible object is
     *     {@link EXCHINDCodeType }
     *     
     */
    @ManyToOne(targetEntity = EXCHINDCodeType.class, cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinColumn(name = "EXCHIND")
    public EXCHINDCodeType getEXCHIND() {
        return exchind;
    }

    /**
     * Sets the value of the exchind property.
     * 
     * @param value
     *     allowed object is
     *     {@link EXCHINDCodeType }
     *     
     */
    public void setEXCHIND(EXCHINDCodeType value) {
        this.exchind = value;
    }

    /**
     * Gets the value of the grossfee property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "GROSSFEE", precision = 6, scale = 0)
    public BigInteger getGROSSFEE() {
        return grossfee;
    }

    /**
     * Sets the value of the grossfee property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setGROSSFEE(BigInteger value) {
        this.grossfee = value;
    }

    /**
     * Gets the value of the locsdy property.
     * 
     * @return
     *     possible object is
     *     {@link LOCSDYCodeType }
     *     
     */
    @ManyToOne(targetEntity = LOCSDYCodeType.class, cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinColumn(name = "LOCSDY")
    public LOCSDYCodeType getLOCSDY() {
        return locsdy;
    }

    /**
     * Sets the value of the locsdy property.
     * 
     * @param value
     *     allowed object is
     *     {@link LOCSDYCodeType }
     *     
     */
    public void setLOCSDY(LOCSDYCodeType value) {
        this.locsdy = value;
    }

    /**
     * Gets the value of the mode property.
     * 
     * @return
     *     possible object is
     *     {@link MODECodeType }
     *     
     */
    @ManyToOne(targetEntity = MODECodeType.class, cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinColumn(name = "MODE")
    public MODECodeType getMODE() {
        return mode;
    }

    /**
     * Sets the value of the mode property.
     * 
     * @param value
     *     allowed object is
     *     {@link MODECodeType }
     *     
     */
    public void setMODE(MODECodeType value) {
        this.mode = value;
    }

    /**
     * Gets the value of the mstufee property.
     * 
     * @return
     *     possible object is
     *     {@link MSTUFEECodeType }
     *     
     */
    @ManyToOne(targetEntity = MSTUFEECodeType.class, cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinColumn(name = "MSTUFEE")
    public MSTUFEECodeType getMSTUFEE() {
        return mstufee;
    }

    /**
     * Sets the value of the mstufee property.
     * 
     * @param value
     *     allowed object is
     *     {@link MSTUFEECodeType }
     *     
     */
    public void setMSTUFEE(MSTUFEECodeType value) {
        this.mstufee = value;
    }

    /**
     * Gets the value of the netfee property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "NETFEE", precision = 6, scale = 0)
    public BigInteger getNETFEE() {
        return netfee;
    }

    /**
     * Sets the value of the netfee property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNETFEE(BigInteger value) {
        this.netfee = value;
    }

    /**
     * Gets the value of the notact property.
     * 
     * @return
     *     possible object is
     *     {@link NOTACTCodeType }
     *     
     */
    @ManyToOne(targetEntity = NOTACTCodeType.class, cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinColumn(name = "NOTACT")
    public NOTACTCodeType getNOTACT() {
        return notact;
    }

    /**
     * Sets the value of the notact property.
     * 
     * @param value
     *     allowed object is
     *     {@link NOTACTCodeType }
     *     
     */
    public void setNOTACT(NOTACTCodeType value) {
        this.notact = value;
    }

    /**
     * Gets the value of the periodend property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getPERIODEND() {
        return periodend;
    }

    /**
     * Sets the value of the periodend property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setPERIODEND(XMLGregorianCalendar value) {
        this.periodend = value;
    }

    /**
     * Gets the value of the periodstart property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getPERIODSTART() {
        return periodstart;
    }

    /**
     * Sets the value of the periodstart property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setPERIODSTART(XMLGregorianCalendar value) {
        this.periodstart = value;
    }

    /**
     * Gets the value of the priprov property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRIPROV", scale = 0)
    public String getPRIPROV() {
        return priprov;
    }

    /**
     * Sets the value of the priprov property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPRIPROV(String value) {
        this.priprov = value;
    }

    /**
     * Gets the value of the sselig property.
     * 
     * @return
     *     possible object is
     *     {@link SSELIGCodeType }
     *     
     */
    @ManyToOne(targetEntity = SSELIGCodeType.class, cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinColumn(name = "SSELIG")
    public SSELIGCodeType getSSELIG() {
        return sselig;
    }

    /**
     * Sets the value of the sselig property.
     * 
     * @param value
     *     allowed object is
     *     {@link SSELIGCodeType }
     *     
     */
    public void setSSELIG(SSELIGCodeType value) {
        this.sselig = value;
    }

    /**
     * Gets the value of the stuload property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "STULOAD", precision = 20, scale = 1)
    public BigDecimal getSTULOAD() {
        return stuload;
    }

    /**
     * Sets the value of the stuload property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setSTULOAD(BigDecimal value) {
        this.stuload = value;
    }

    /**
     * Gets the value of the yearprg property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "YEARPRG", precision = 2, scale = 0)
    public BigInteger getYEARPRG() {
        return yearprg;
    }

    /**
     * Sets the value of the yearprg property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setYEARPRG(BigInteger value) {
        this.yearprg = value;
    }

    /**
     * Gets the value of the yearstu property.
     * 
     */
    @Basic
    @Column(name = "YEARSTU", precision = 20, scale = 0)
    public int getYEARSTU() {
        return yearstu;
    }

    /**
     * Sets the value of the yearstu property.
     * 
     */
    public void setYEARSTU(int value) {
        this.yearstu = value;
    }

    /**
     * Gets the value of the qualificationsAwarded property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the qualificationsAwarded property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQualificationsAwarded().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QualificationsAwarded }
     * 
     * 
     */
    @OneToMany(targetEntity = QualificationsAwarded.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "QUALIFICATIONSAWARDED_INSTAN_0")
    public List<QualificationsAwarded> getQualificationsAwarded() {
        if (qualificationsAwarded == null) {
            qualificationsAwarded = new ArrayList<QualificationsAwarded>();
        }
        return this.qualificationsAwarded;
    }

    /**
     * 
     * 
     */
    public void setQualificationsAwarded(List<QualificationsAwarded> qualificationsAwarded) {
        this.qualificationsAwarded = qualificationsAwarded;
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "hjid")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long gethjid() {
        return hjid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void sethjid(Long value) {
        this.hjid = value;
    }

    @Basic
    @Column(name = "PERIODEND")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getPERIODENDItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDateTime.class, this.getPERIODEND());
    }

    public void setPERIODENDItem(Date target) {
        setPERIODEND(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDateTime.class, target));
    }

    @Basic
    @Column(name = "PERIODSTART")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getPERIODSTARTItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDateTime.class, this.getPERIODSTART());
    }

    public void setPERIODSTARTItem(Date target) {
        setPERIODSTART(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDateTime.class, target));
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof InstancePeriod)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final InstancePeriod that = ((InstancePeriod) object);
        {
            DISALLCodeType lhsDISALL;
            lhsDISALL = this.getDISALL();
            DISALLCodeType rhsDISALL;
            rhsDISALL = that.getDISALL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "disall", lhsDISALL), LocatorUtils.property(thatLocator, "disall", rhsDISALL), lhsDISALL, rhsDISALL)) {
                return false;
            }
        }
        {
            EXCHINDCodeType lhsEXCHIND;
            lhsEXCHIND = this.getEXCHIND();
            EXCHINDCodeType rhsEXCHIND;
            rhsEXCHIND = that.getEXCHIND();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "exchind", lhsEXCHIND), LocatorUtils.property(thatLocator, "exchind", rhsEXCHIND), lhsEXCHIND, rhsEXCHIND)) {
                return false;
            }
        }
        {
            BigInteger lhsGROSSFEE;
            lhsGROSSFEE = this.getGROSSFEE();
            BigInteger rhsGROSSFEE;
            rhsGROSSFEE = that.getGROSSFEE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "grossfee", lhsGROSSFEE), LocatorUtils.property(thatLocator, "grossfee", rhsGROSSFEE), lhsGROSSFEE, rhsGROSSFEE)) {
                return false;
            }
        }
        {
            LOCSDYCodeType lhsLOCSDY;
            lhsLOCSDY = this.getLOCSDY();
            LOCSDYCodeType rhsLOCSDY;
            rhsLOCSDY = that.getLOCSDY();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "locsdy", lhsLOCSDY), LocatorUtils.property(thatLocator, "locsdy", rhsLOCSDY), lhsLOCSDY, rhsLOCSDY)) {
                return false;
            }
        }
        {
            MODECodeType lhsMODE;
            lhsMODE = this.getMODE();
            MODECodeType rhsMODE;
            rhsMODE = that.getMODE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mode", lhsMODE), LocatorUtils.property(thatLocator, "mode", rhsMODE), lhsMODE, rhsMODE)) {
                return false;
            }
        }
        {
            MSTUFEECodeType lhsMSTUFEE;
            lhsMSTUFEE = this.getMSTUFEE();
            MSTUFEECodeType rhsMSTUFEE;
            rhsMSTUFEE = that.getMSTUFEE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mstufee", lhsMSTUFEE), LocatorUtils.property(thatLocator, "mstufee", rhsMSTUFEE), lhsMSTUFEE, rhsMSTUFEE)) {
                return false;
            }
        }
        {
            BigInteger lhsNETFEE;
            lhsNETFEE = this.getNETFEE();
            BigInteger rhsNETFEE;
            rhsNETFEE = that.getNETFEE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "netfee", lhsNETFEE), LocatorUtils.property(thatLocator, "netfee", rhsNETFEE), lhsNETFEE, rhsNETFEE)) {
                return false;
            }
        }
        {
            NOTACTCodeType lhsNOTACT;
            lhsNOTACT = this.getNOTACT();
            NOTACTCodeType rhsNOTACT;
            rhsNOTACT = that.getNOTACT();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notact", lhsNOTACT), LocatorUtils.property(thatLocator, "notact", rhsNOTACT), lhsNOTACT, rhsNOTACT)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsPERIODEND;
            lhsPERIODEND = this.getPERIODEND();
            XMLGregorianCalendar rhsPERIODEND;
            rhsPERIODEND = that.getPERIODEND();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "periodend", lhsPERIODEND), LocatorUtils.property(thatLocator, "periodend", rhsPERIODEND), lhsPERIODEND, rhsPERIODEND)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsPERIODSTART;
            lhsPERIODSTART = this.getPERIODSTART();
            XMLGregorianCalendar rhsPERIODSTART;
            rhsPERIODSTART = that.getPERIODSTART();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "periodstart", lhsPERIODSTART), LocatorUtils.property(thatLocator, "periodstart", rhsPERIODSTART), lhsPERIODSTART, rhsPERIODSTART)) {
                return false;
            }
        }
        {
            String lhsPRIPROV;
            lhsPRIPROV = this.getPRIPROV();
            String rhsPRIPROV;
            rhsPRIPROV = that.getPRIPROV();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "priprov", lhsPRIPROV), LocatorUtils.property(thatLocator, "priprov", rhsPRIPROV), lhsPRIPROV, rhsPRIPROV)) {
                return false;
            }
        }
        {
            SSELIGCodeType lhsSSELIG;
            lhsSSELIG = this.getSSELIG();
            SSELIGCodeType rhsSSELIG;
            rhsSSELIG = that.getSSELIG();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sselig", lhsSSELIG), LocatorUtils.property(thatLocator, "sselig", rhsSSELIG), lhsSSELIG, rhsSSELIG)) {
                return false;
            }
        }
        {
            BigDecimal lhsSTULOAD;
            lhsSTULOAD = this.getSTULOAD();
            BigDecimal rhsSTULOAD;
            rhsSTULOAD = that.getSTULOAD();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stuload", lhsSTULOAD), LocatorUtils.property(thatLocator, "stuload", rhsSTULOAD), lhsSTULOAD, rhsSTULOAD)) {
                return false;
            }
        }
        {
            BigInteger lhsYEARPRG;
            lhsYEARPRG = this.getYEARPRG();
            BigInteger rhsYEARPRG;
            rhsYEARPRG = that.getYEARPRG();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "yearprg", lhsYEARPRG), LocatorUtils.property(thatLocator, "yearprg", rhsYEARPRG), lhsYEARPRG, rhsYEARPRG)) {
                return false;
            }
        }
        {
            int lhsYEARSTU;
            lhsYEARSTU = (true?this.getYEARSTU(): 0);
            int rhsYEARSTU;
            rhsYEARSTU = (true?that.getYEARSTU(): 0);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "yearstu", lhsYEARSTU), LocatorUtils.property(thatLocator, "yearstu", rhsYEARSTU), lhsYEARSTU, rhsYEARSTU)) {
                return false;
            }
        }
        {
            List<QualificationsAwarded> lhsQualificationsAwarded;
            lhsQualificationsAwarded = (((this.qualificationsAwarded!= null)&&(!this.qualificationsAwarded.isEmpty()))?this.getQualificationsAwarded():null);
            List<QualificationsAwarded> rhsQualificationsAwarded;
            rhsQualificationsAwarded = (((that.qualificationsAwarded!= null)&&(!that.qualificationsAwarded.isEmpty()))?that.getQualificationsAwarded():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qualificationsAwarded", lhsQualificationsAwarded), LocatorUtils.property(thatLocator, "qualificationsAwarded", rhsQualificationsAwarded), lhsQualificationsAwarded, rhsQualificationsAwarded)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            DISALLCodeType theDISALL;
            theDISALL = this.getDISALL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "disall", theDISALL), currentHashCode, theDISALL);
        }
        {
            EXCHINDCodeType theEXCHIND;
            theEXCHIND = this.getEXCHIND();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "exchind", theEXCHIND), currentHashCode, theEXCHIND);
        }
        {
            BigInteger theGROSSFEE;
            theGROSSFEE = this.getGROSSFEE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "grossfee", theGROSSFEE), currentHashCode, theGROSSFEE);
        }
        {
            LOCSDYCodeType theLOCSDY;
            theLOCSDY = this.getLOCSDY();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "locsdy", theLOCSDY), currentHashCode, theLOCSDY);
        }
        {
            MODECodeType theMODE;
            theMODE = this.getMODE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mode", theMODE), currentHashCode, theMODE);
        }
        {
            MSTUFEECodeType theMSTUFEE;
            theMSTUFEE = this.getMSTUFEE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mstufee", theMSTUFEE), currentHashCode, theMSTUFEE);
        }
        {
            BigInteger theNETFEE;
            theNETFEE = this.getNETFEE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "netfee", theNETFEE), currentHashCode, theNETFEE);
        }
        {
            NOTACTCodeType theNOTACT;
            theNOTACT = this.getNOTACT();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notact", theNOTACT), currentHashCode, theNOTACT);
        }
        {
            XMLGregorianCalendar thePERIODEND;
            thePERIODEND = this.getPERIODEND();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "periodend", thePERIODEND), currentHashCode, thePERIODEND);
        }
        {
            XMLGregorianCalendar thePERIODSTART;
            thePERIODSTART = this.getPERIODSTART();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "periodstart", thePERIODSTART), currentHashCode, thePERIODSTART);
        }
        {
            String thePRIPROV;
            thePRIPROV = this.getPRIPROV();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "priprov", thePRIPROV), currentHashCode, thePRIPROV);
        }
        {
            SSELIGCodeType theSSELIG;
            theSSELIG = this.getSSELIG();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sselig", theSSELIG), currentHashCode, theSSELIG);
        }
        {
            BigDecimal theSTULOAD;
            theSTULOAD = this.getSTULOAD();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stuload", theSTULOAD), currentHashCode, theSTULOAD);
        }
        {
            BigInteger theYEARPRG;
            theYEARPRG = this.getYEARPRG();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "yearprg", theYEARPRG), currentHashCode, theYEARPRG);
        }
        {
            int theYEARSTU;
            theYEARSTU = (true?this.getYEARSTU(): 0);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "yearstu", theYEARSTU), currentHashCode, theYEARSTU);
        }
        {
            List<QualificationsAwarded> theQualificationsAwarded;
            theQualificationsAwarded = (((this.qualificationsAwarded!= null)&&(!this.qualificationsAwarded.isEmpty()))?this.getQualificationsAwarded():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qualificationsAwarded", theQualificationsAwarded), currentHashCode, theQualificationsAwarded);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
